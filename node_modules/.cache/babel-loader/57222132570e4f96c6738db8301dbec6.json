{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nimport { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 12\n  }, {\n    id: 2,\n    message: 'I am gay',\n    likesCount: 11\n  }, {\n    id: 3,\n    message: 'Blabla',\n    likesCount: 11\n  }, {\n    id: 4,\n    message: 'Dada',\n    likesCount: 11\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.NewPostBody,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = NewPostBody => ({\n  type: ADD_POST,\n  NewPostBody\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"names":["usersAPI","profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","NewPostBody","addPostActionCreator","setUserProfile","getUserProfile","userId","dispatch","getProfile","then","response","data","setStatus","getStatus","updateStatus","resultCode"],"sources":["/Users/alexsandrabramov/Documents/GitHub/React/src/redux/profile-reducer.js"],"sourcesContent":["import {usersAPI} from \"../api/api\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'I am gay', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.NewPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (NewPostBody) => ({type: ADD_POST, NewPostBody})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) =>{\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getStatus = (userId) => (dispatch) =>{\r\n    profileAPI.getStatus(userId)\r\n    .then(response => {\r\n        dispatch(setStatus(response.data));\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) =>{\r\n    profileAPI.updateStatus(status)\r\n    .then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setStatus(status));\r\n        }\r\n    });\r\n}\r\nexport default profileReducer;"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,YAAvB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;EACfC,KAAK,EAAE,CACH;IAACC,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,kBAAjB;IAAqCC,UAAU,EAAE;EAAjD,CADG,EAEH;IAACF,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,UAAjB;IAA6BC,UAAU,EAAE;EAAzC,CAFG,EAGH;IAACF,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,QAAjB;IAA2BC,UAAU,EAAE;EAAvC,CAHG,EAIH;IAACF,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,MAAjB;IAAyBC,UAAU,EAAE;EAArC,CAJG,CADQ;EAOfC,OAAO,EAAE,IAPM;EAQfC,MAAM,EAAE;AARO,CAAnB;;AAWA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAErD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKb,QAAL;MAAe;QACX,IAAIc,OAAO,GAAG;UACVT,EAAE,EAAE,CADM;UAEVC,OAAO,EAAEM,MAAM,CAACG,WAFN;UAGVR,UAAU,EAAE;QAHF,CAAd;QAKA,OAAO,EACH,GAAGI,KADA;UAEHP,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBU,OAAjB;QAFJ,CAAP;MAIH;;IACD,KAAKb,gBAAL;MAAuB;QACnB,OAAO,EAAC,GAAGU,KAAJ;UAAWH,OAAO,EAAEI,MAAM,CAACJ;QAA3B,CAAP;MACH;;IACD,KAAKN,UAAL;MAAiB;QACb,OAAO,EAAC,GAAGS,KAAJ;UAAWF,MAAM,EAAEG,MAAM,CAACH;QAA1B,CAAP;MACH;;IACD;MACI,OAAOE,KAAP;EAnBR;AAqBH,CAvBD;;AA0BA,OAAO,MAAMK,oBAAoB,GAAID,WAAD,KAAkB;EAACF,IAAI,EAAEb,QAAP;EAAiBe;AAAjB,CAAlB,CAA7B;AACP,OAAO,MAAME,cAAc,GAAIT,OAAD,KAAc;EAACK,IAAI,EAAEZ,gBAAP;EAAyBO;AAAzB,CAAd,CAAvB;AAEP,OAAO,MAAMU,cAAc,GAAIC,MAAD,IAAaC,QAAD,IAAa;EACnDtB,QAAQ,CAACuB,UAAT,CAAoBF,MAApB,EAA4BG,IAA5B,CAAiCC,QAAQ,IAAI;IACzCH,QAAQ,CAACH,cAAc,CAACM,QAAQ,CAACC,IAAV,CAAf,CAAR;EACH,CAFD;AAGH,CAJM;AAKP,OAAO,MAAMC,SAAS,GAAIhB,MAAD,KAAa;EAACI,IAAI,EAAEX,UAAP;EAAmBO;AAAnB,CAAb,CAAlB;AAEP,OAAO,MAAMiB,SAAS,GAAIP,MAAD,IAAaC,QAAD,IAAa;EAC9CrB,UAAU,CAAC2B,SAAX,CAAqBP,MAArB,EACCG,IADD,CACMC,QAAQ,IAAI;IACdH,QAAQ,CAACK,SAAS,CAACF,QAAQ,CAACC,IAAV,CAAV,CAAR;EACH,CAHD;AAIH,CALM;AAOP,OAAO,MAAMG,YAAY,GAAIlB,MAAD,IAAaW,QAAD,IAAa;EACjDrB,UAAU,CAAC4B,YAAX,CAAwBlB,MAAxB,EACCa,IADD,CACMC,QAAQ,IAAI;IACd,IAAGA,QAAQ,CAACC,IAAT,CAAcI,UAAd,KAA6B,CAAhC,EAAkC;MAC9BR,QAAQ,CAACK,SAAS,CAAChB,MAAD,CAAV,CAAR;IACH;EACJ,CALD;AAMH,CAPM;AAQP,eAAeC,cAAf"},"metadata":{},"sourceType":"module"}